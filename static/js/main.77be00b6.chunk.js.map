{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","hasTime","timerState","e","button","setState","window","addEventListener","this","setInterval","Date","toLocaleTimeString","prevProps","prevState","console","info","document","removeEventListener","className","props","name","React","Component","getRandomName","value","now","toString","slice","App","clockName","hasClock","timerID","clockShow","preventDefault","debug","clearInterval","ReactDOM","render","getElementById"],"mappings":"gMAeaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,SAAS,GAHb,EAyBEC,WAAa,SAACC,GACK,IAAbA,EAAEC,OACJ,EAAKC,SAAS,CAAEJ,SAAS,IAEzB,EAAKI,SAAS,CAAEJ,SAAS,KA7B/B,uDAME,WAA2B,IAAD,OACxBK,OAAOC,iBAAiB,QAASC,KAAKN,YACtCI,OAAOG,aAAY,WACjB,IAAMT,GAAO,IAAIU,MAAOC,qBAExB,EAAKN,SAAS,CAAEL,WACf,OAZP,gCAeE,SAAmBY,EAAkBC,GAC/BL,KAAKT,MAAME,SAAWO,KAAKT,MAAMC,OAASa,EAAUb,MAAQY,GAC9DE,QAAQC,KAAKP,KAAKT,MAAMC,QAjB9B,kCAqBE,WACEgB,SAASC,oBAAoB,YAAaT,KAAKN,cAtBnD,oBAiCE,WACE,OAEE,mCACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKW,MAAMC,OAGb,YACD,sBAAMF,UAAU,cAAhB,SACGV,KAAKT,MAAMC,gBA5CxB,GAA2BqB,IAAMC,WCRjC,SAASC,IACP,IAAMC,EAAQd,KAAKe,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAUX,IAAMI,EAAb,4MACE7B,MAAQ,CACN8B,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,EA8BEC,UAAY,SAAC7B,GACXA,EAAE8B,iBAEe,IAAb9B,EAAEC,OACJ,EAAKC,SAAS,CAAEyB,UAAU,IAE1B,EAAKzB,SAAS,CAAEyB,UAAU,KApChC,uDAQE,WAAqB,IAAD,OAClBxB,OAAOC,iBAAiB,QAASC,KAAKwB,WACtC1B,OAAOC,iBAAiB,cAAeC,KAAKwB,WAE5CxB,KAAKuB,QAAUzB,OAAOG,aAAY,WAChC,EAAKJ,SAAU,CAAEwB,UAAWN,QAE3B,QAfP,gCAkBE,SAAmBX,EAAkBC,IACP,IAAxBL,KAAKT,MAAM+B,UACVtB,KAAKT,MAAM8B,YAAchB,EAAUgB,WAAajB,GACnDE,QAAQoB,MAAR,uBAA8BrB,EAAUgB,UAAxC,eAAwDrB,KAAKT,MAAM8B,cArBzE,kCAyBE,WACEM,cAAc3B,KAAKuB,SACnBf,SAASC,oBAAoB,YAAaT,KAAKwB,aA3BnD,oBAwCE,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,6CAEEV,KAAKT,MAAM+B,UACT,cAAC,EAAD,CAAOV,KAAMZ,KAAKT,MAAM8B,mBA9CpC,GAAyBR,IAAMC,WCjB/Bc,IAASC,OACP,cAAC,EAAD,IACArB,SAASsB,eAAe,U","file":"static/js/main.77be00b6.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n// import { render } from 'react-dom';\nimport './App.scss';\n// import { event } from 'cypress/types/jquery';\n\ntype State = {\n  time: string;\n  hasTime: boolean,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: '',\n    hasTime: true,\n  };\n\n  componentDidMount(): void {\n    window.addEventListener('click', this.timerState);\n    window.setInterval(() => {\n      const time = new Date().toLocaleTimeString();\n\n      this.setState({ time });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.hasTime && this.state.time !== prevState.time && prevProps) {\n      console.info(this.state.time);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.timerState);\n  }\n\n  timerState = (e: MouseEvent) => {\n    if (e.button === 2) {\n      this.setState({ hasTime: false });\n    } else {\n      this.setState({ hasTime: true });\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n\n      <>\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {this.props.name}\n          </strong>\n\n          {' time is '}\n          <span className=\"Clock__time\">\n            {this.state.time}\n          </span>\n\n        </div>\n\n      </>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\n// import { render } from 'react-dom';\nimport './App.scss';\n// import { event } from 'cypress/types/jquery';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerID = 0;\n\n  componentDidMount() {\n    window.addEventListener('click', this.clockShow);\n    window.addEventListener('contextmenu', this.clockShow);\n\n    this.timerID = window.setInterval(() => {\n      this.setState(({ clockName: getRandomName() }\n      ));\n    }, 3300);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.hasClock === true\n      && this.state.clockName !== prevState.clockName && prevProps) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n    document.removeEventListener('mousedown', this.clockShow);\n  }\n\n  clockShow = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (e.button === 2) {\n      this.setState({ hasClock: false });\n    } else {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.hasClock\n        && (<Clock name={this.state.clockName} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}