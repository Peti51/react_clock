{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerID","this","window","setInterval","Date","toLocaleTimeString","setState","prevProps","prevState","console","info","clearInterval","className","props","name","React","Component","getRandomName","value","now","toString","slice","App","clockName","hasClock","clockShow","e","preventDefault","button","addEventListener","debug","ReactDOM","render","document","getElementById"],"mappings":"gMAYaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAFV,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMJ,GAAO,IAAIK,MAAOC,qBAExB,EAAKC,SAAS,CAAEP,WACf,OAZP,gCAeE,SAAmBQ,EAAkBC,GAC/BP,KAAKH,MAAMC,OAASS,EAAUT,MAAQQ,GACxCE,QAAQC,KAAKT,KAAKH,MAAMC,QAjB9B,kCAqBE,WACEY,cAAcV,KAAKD,WAtBvB,oBAyBE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKY,MAAMC,OAEb,YACD,sBAAMF,UAAU,cAAhB,SACGX,KAAKH,MAAMC,cAjCtB,GAA2BgB,IAAMC,WCPjC,SAASC,IACP,IAAMC,EAAQd,KAAKe,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAUX,IAAMI,EAAb,4MACExB,MAAQ,CACNyB,UAAW,UACXC,UAAU,GAHd,EAMExB,QAAU,EANZ,EA+BEyB,UAAY,SAACC,GACXA,EAAEC,iBAEF,EAAKrB,SAAS,CAAEkB,SAAuB,IAAbE,EAAEE,UAlChC,uDAQE,WAAqB,IAAD,OAClB1B,OAAO2B,iBAAiB,QAAS5B,KAAKwB,WACtCvB,OAAO2B,iBAAiB,cAAe5B,KAAKwB,WAE5CxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKG,SAAU,CAAEiB,UAAWN,QAE3B,QAfP,gCAkBE,SAAmBV,EAAkBC,IACP,IAAxBP,KAAKH,MAAM0B,UACVvB,KAAKH,MAAMyB,YAAcf,EAAUe,WAAahB,GACnDE,QAAQqB,MAAR,uBAA8BtB,EAAUe,UAAxC,eAAwDtB,KAAKH,MAAMyB,cArBzE,kCAyBE,WACEZ,cAAcV,KAAKD,SACnBE,OAAO2B,iBAAiB,QAAS5B,KAAKwB,WACtCvB,OAAO2B,iBAAiB,cAAe5B,KAAKwB,aA5BhD,oBAqCE,WACE,IAAQF,EAActB,KAAKH,MAAnByB,UAER,OACE,sBAAKX,UAAU,MAAf,UACE,6CAECX,KAAKH,MAAM0B,UAAY,cAAC,EAAD,CAAOV,KAAMS,WA5C7C,GAAyBR,IAAMC,WCf/Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.a7de8c5e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: '',\n  };\n\n  timerID = 0;\n\n  componentDidMount(): void {\n    this.timerID = window.setInterval(() => {\n      const time = new Date().toLocaleTimeString();\n\n      this.setState({ time });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.time !== prevState.time && prevProps) {\n      console.info(this.state.time);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerID = 0;\n\n  componentDidMount() {\n    window.addEventListener('click', this.clockShow);\n    window.addEventListener('contextmenu', this.clockShow);\n\n    this.timerID = window.setInterval(() => {\n      this.setState(({ clockName: getRandomName() }\n      ));\n    }, 3300);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.hasClock === true\n      && this.state.clockName !== prevState.clockName && prevProps) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n    window.addEventListener('click', this.clockShow);\n    window.addEventListener('contextmenu', this.clockShow);\n  }\n\n  clockShow = (e: MouseEvent) => {\n    e.preventDefault();\n\n    this.setState({ hasClock: e.button !== 2 });\n  };\n\n  render(): React.ReactNode {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}