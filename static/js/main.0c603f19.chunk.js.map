{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","time","timerName","hasClock","timerID","clockShow","event","preventDefault","button","setState","this","window","setInterval","toLocaleTimeString","console","info","document","addEventListener","prevState","clearInterval","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAKA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAWX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,UAAW,UACXC,UAAU,GAJd,EAOEC,QAAU,EAPZ,EAmCEC,UAAY,SAACC,GACXA,EAAMC,iBAEe,IAAjBD,EAAME,OACR,EAAKC,SAAS,CAAEN,UAAU,IAE1B,EAAKM,SAAS,CAAEN,UAAU,KAzChC,uDASE,WAAqB,IAAD,OAClBO,KAAKN,QAAUO,OAAOC,aAAY,WAChC,EAAKH,SAAU,CAAEP,UAAWT,QAE3B,MAEHkB,OAAOC,aAAY,WACjB,EAAKH,SAAS,CAAER,MAAM,IAAIN,MAAOkB,uBACjCC,QAAQC,KAAK,EAAKf,MAAMC,QACvB,KAEHe,SAASC,iBAAiB,YAAaP,KAAKL,aApBhD,gCAuBE,SAAmBa,IACW,IAAxBR,KAAKV,MAAMG,UACVO,KAAKV,MAAME,YAAcgB,EAAUhB,WACtCY,QAAQC,KAAR,uBAA6BG,EAAUhB,UAAvC,eAAuDQ,KAAKV,MAAME,cA1BxE,kCA8BE,WACEiB,cAAcT,KAAKN,SACnBY,SAASI,oBAAoB,YAAaV,KAAKL,aAhCnD,oBA6CE,WACE,OACE,sBAAKgB,UAAU,MAAf,UACE,6CAEEX,KAAKV,MAAMG,UACX,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKV,MAAME,YAGb,YAED,sBAAMmB,UAAU,cAAhB,SACGX,KAAKV,MAAMC,iBA3D1B,GAAyBqB,IAAMC,WChB/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.0c603f19.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n// import { render } from 'react-dom';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  time: string;\n  timerName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    time: '',\n    timerName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerID = 0;\n\n  componentDidMount() {\n    this.timerID = window.setInterval(() => {\n      this.setState(({ timerName: getRandomName() }\n      ));\n    }, 3300);\n\n    window.setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n      console.info(this.state.time);\n    }, 1000);\n\n    document.addEventListener('mousedown', this.clockShow);\n  }\n\n  componentDidUpdate(prevState: State) {\n    if (this.state.hasClock === true\n      && this.state.timerName !== prevState.timerName) {\n      console.info(`Renamed from ${prevState.timerName} to ${this.state.timerName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n    document.removeEventListener('mousedown', this.clockShow);\n  }\n\n  clockShow = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (event.button === 2) {\n      this.setState({ hasClock: false });\n    } else {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {this.state.timerName}\n            </strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {this.state.time}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}