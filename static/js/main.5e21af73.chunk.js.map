{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","time","oldName","newName","hasClock","timerID","clockShow","click","preventDefault","button","setState","window","setInterval","toLocaleTimeString","this","prevState","document","addEventListener","console","info","clearInterval","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAKA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAYX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,QAAS,UACTC,QAAS,UACTC,UAAU,GALd,EAQEC,QAAU,EARZ,EA4CEC,UAAY,SAACC,GACXA,EAAMC,iBAEe,IAAjBD,EAAME,OACR,EAAKC,SAAS,CAAEN,UAAU,IAE1B,EAAKM,SAAS,CAAEN,UAAU,KAlDhC,uDAUE,WAAqB,IAAD,OAClBO,OAAOC,aAAY,WACjB,EAAKF,SAAS,CAAET,MAAM,IAAIN,MAAOkB,yBAChC,KAEHC,KAAKT,QAAUM,OAAOC,aAAY,WAChC,EAAKF,UAAS,SAAAK,GAAS,MACrB,CAAEb,QAASa,EAAUZ,YAGvB,EAAKO,SAAS,CAAEP,QAASV,QACxB,MAEHuB,SAASC,iBAAiB,YAAaH,KAAKR,aAvBhD,gCA0BE,SAAmBS,IACW,IAAxBD,KAAKd,MAAMI,UACVU,KAAKd,MAAME,UAAYa,EAAUb,SACjCY,KAAKd,MAAMG,UAAYY,EAAUZ,SACpCe,QAAQC,KAAR,uBAA6BL,KAAKd,MAAME,QAAxC,eAAsDY,KAAKd,MAAMG,WAGvC,IAAxBW,KAAKd,MAAMI,UACVU,KAAKd,MAAMC,OAASc,EAAUd,MACjCiB,QAAQC,KAAKL,KAAKd,MAAMC,QAnC9B,kCAuCE,WACEmB,cAAcN,KAAKT,SACnBW,SAASK,oBAAoB,YAAaP,KAAKR,aAzCnD,oBAsDE,WACE,OACE,sBAAKgB,UAAU,MAAf,UACE,6CAEER,KAAKd,MAAMI,UACX,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,KAAKd,MAAMG,UAGb,YAED,sBAAMmB,UAAU,cAAhB,SACGR,KAAKd,MAAMC,iBApE1B,GAAyBsB,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.5e21af73.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n// import { render } from 'react-dom';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  time: string;\n  oldName: string | {},\n  newName: string | {},\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    time: '',\n    oldName: 'Clock-0',\n    newName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerID = 0;\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n\n    this.timerID = window.setInterval(() => {\n      this.setState(prevState => (\n        { oldName: prevState.newName }\n      ));\n\n      this.setState({ newName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('mousedown', this.clockShow);\n  }\n\n  componentDidUpdate(prevState: State) {\n    if (this.state.hasClock === true\n      && this.state.oldName !== prevState.oldName\n      && this.state.newName !== prevState.newName) {\n      console.info(`Renamed from ${this.state.oldName} to ${this.state.newName}`);\n    }\n\n    if (this.state.hasClock === true\n      && this.state.time !== prevState.time) {\n      console.info(this.state.time);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n    document.removeEventListener('mousedown', this.clockShow);\n  }\n\n  clockShow = (click: MouseEvent) => {\n    click.preventDefault();\n\n    if (click.button === 2) {\n      this.setState({ hasClock: false });\n    } else {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {this.state.newName}\n            </strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {this.state.time}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}